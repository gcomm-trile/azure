{
	"name": "ETL khaosat",
	"properties": {
		"activities": [
			{
				"name": "ForEach Store",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "survey_nps",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('survey_nps').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Download Khaosat",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Download Khaosat",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"survey_id": {
										"value": "@string(item().id)",
										"type": "Expression"
									},
									"lastest_downloaded_page": {
										"value": "@string(item().currentPage)",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "survey_nps",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "delete old file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "sqldim_NPS_surveys",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "run sp Update fact NPS",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data dl to staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_updateFactNPS]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy data dl to staging",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach Store",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": "khaosat.me",
							"wildcardFileName": "*.json"
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "TRUNCATE TABLE dbo.staging_nps",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "khaosatAll",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "stg_nps",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "delete old file",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "khaosatAll",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					}
				}
			}
		],
		"folder": {
			"name": "khaosat"
		},
		"annotations": [],
		"lastPublishTime": "2020-09-03T06:35:30Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}